#!/usr/bin/env bash

DOTFILES_ROOT=$(pwd -P)

setup_zsh () {
  echo "Copying main ZSH RC (because we don't always want to keep changes to this file) and adding environment variables and aliases."
  cp $DOTFILES_ROOT/shell/zsh/zshrc $HOME/.zshrc

  # Set environment variables
  echo "source ${DOTFILES_ROOT}/shell/env/base" >> $HOME/.zshrc
}

if [ "$CODESPACES" = "true" ]; then
  echo "In a Codespaces instance. Adding Codespaces-specific settings."

  # Source my dotfiles for zsh.
  echo "source /workspaces/.codespaces/.persistedshare/dotfiles/shell/zsh/codespaces" >> $HOME/.zshrc
else
  echo "Let's get our generic stuff out of the way, first. It doesn't really matter what nix platform we're on, other than Codespaces."

  echo "Linking gitconfig..."
  ln -s $DOTFILES_ROOT/git/gitconfig $HOME/.gitconfig

  echo "Linking ssh config..."
  ln -s $DOTFILES_ROOT/ssh/config $HOME/.ssh/config

  # Yes, we'll install it even for Linux. This makes getting NodeJS infinitely easier, even on Linux.
  echo "Installing Homebrew."
  NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

  echo "Installing node..."
  # Corepack is now kept separate for some ungodly reason
  brew install node corepack
  echo "Enabling corepack, so we can use Yarn as intended."
  corepack enable

  if [[ "$OSTYPE" == "darwin"* ]]; then
    echo "Looks like we're running on a Mac. Adding Mac-specific things."

    setup_zsh
    echo "source ${DOTFILES_ROOT}/shell/zsh/darwin" >> $HOME/.zshrc

  elif [[ "$OSTYPE" == "linux"* ]]; then
    echo "Looks like we're running Linux. Let's get it set up."

    if [[ "$SHELL" == *"zsh" ]]; then
      echo "We're using zsh, so let's set up zsh stuff."

      setup_zsh

      # Set aliases
      echo "source ${DOTFILES_ROOT}/shell/aliases/arch" >> $HOME/.zshrc
      echo "source ${DOTFILES_ROOT}/shell/aliases/not-garuda" >> $HOME/.zshrc

    elif [[ "$SHELL" == *"fish"* ]]; then
      echo "We're using fish, so let's set up fish stuff."

      echo "Linking base dotfiles.fish file."
      ln -s $DOTFILES_ROOT/shell/fish/dotfiles.fish $HOME/.config/fish/conf.d/dotfiles.fish

      if [[ "uname -a" == *"garuda"* ]] || [[ "uname -a" == *"GARUDA"* ]]; then
        echo "Ohey, it's Garuda! We don't need to do as much, since they do a bunch of configurations."
      else
        ln -s $DOTFILES_ROOT/shell/fish/not-garuda.fish $HOME/.config/fish/conf.d/not-garuda.fish
      fi
    else
      echo "We're probably using bash here."
      echo "source ${DOTFILES_ROOT}/shell/aliases/base" >> $HOME/.bashrc
      echo "source ${DOTFILES_ROOT}/shell/aliases/arch" >> $HOME/.bashrc
      echo "source ${DOTFILES_ROOT}/shell/aliases/not-garuda" >> $HOME/.bashrc
    fi
  fi
fi
